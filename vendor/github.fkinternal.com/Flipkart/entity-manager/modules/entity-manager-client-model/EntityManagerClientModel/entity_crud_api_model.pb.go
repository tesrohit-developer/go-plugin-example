// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.11.3
// source: entity_crud_api_model.proto

package EntityManagerClientModel

import (
	EntityManagerModel "github.fkinternal.com/Flipkart/entity-manager/modules/entity-manager-model/EntityManagerModel"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MigrateMode int32

const (
	MigrateMode_DEFAULT_MIGRATION MigrateMode = 0
	MigrateMode_LIVE_MIGRATION    MigrateMode = 1
)

// Enum value maps for MigrateMode.
var (
	MigrateMode_name = map[int32]string{
		0: "DEFAULT_MIGRATION",
		1: "LIVE_MIGRATION",
	}
	MigrateMode_value = map[string]int32{
		"DEFAULT_MIGRATION": 0,
		"LIVE_MIGRATION":    1,
	}
)

func (x MigrateMode) Enum() *MigrateMode {
	p := new(MigrateMode)
	*p = x
	return p
}

func (x MigrateMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MigrateMode) Descriptor() protoreflect.EnumDescriptor {
	return file_entity_crud_api_model_proto_enumTypes[0].Descriptor()
}

func (MigrateMode) Type() protoreflect.EnumType {
	return &file_entity_crud_api_model_proto_enumTypes[0]
}

func (x MigrateMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MigrateMode.Descriptor instead.
func (MigrateMode) EnumDescriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{0}
}

type FetchMode int32

const (
	FetchMode_FETCH_ENTITY       FetchMode = 0
	FetchMode_FETCH_INDEX        FetchMode = 1
	FetchMode_FETCH_ENTITY_INDEX FetchMode = 2
)

// Enum value maps for FetchMode.
var (
	FetchMode_name = map[int32]string{
		0: "FETCH_ENTITY",
		1: "FETCH_INDEX",
		2: "FETCH_ENTITY_INDEX",
	}
	FetchMode_value = map[string]int32{
		"FETCH_ENTITY":       0,
		"FETCH_INDEX":        1,
		"FETCH_ENTITY_INDEX": 2,
	}
)

func (x FetchMode) Enum() *FetchMode {
	p := new(FetchMode)
	*p = x
	return p
}

func (x FetchMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FetchMode) Descriptor() protoreflect.EnumDescriptor {
	return file_entity_crud_api_model_proto_enumTypes[1].Descriptor()
}

func (FetchMode) Type() protoreflect.EnumType {
	return &file_entity_crud_api_model_proto_enumTypes[1]
}

func (x FetchMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FetchMode.Descriptor instead.
func (FetchMode) EnumDescriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{1}
}

type EntityFieldsToRead int32

const (
	EntityFieldsToRead_FIELD_UNKNOWN EntityFieldsToRead = 0
	EntityFieldsToRead_ENTITY        EntityFieldsToRead = 1
	EntityFieldsToRead_VERSION       EntityFieldsToRead = 2
	EntityFieldsToRead_EVENT         EntityFieldsToRead = 3
	EntityFieldsToRead_IDEM_MESSAGES EntityFieldsToRead = 4
)

// Enum value maps for EntityFieldsToRead.
var (
	EntityFieldsToRead_name = map[int32]string{
		0: "FIELD_UNKNOWN",
		1: "ENTITY",
		2: "VERSION",
		3: "EVENT",
		4: "IDEM_MESSAGES",
	}
	EntityFieldsToRead_value = map[string]int32{
		"FIELD_UNKNOWN": 0,
		"ENTITY":        1,
		"VERSION":       2,
		"EVENT":         3,
		"IDEM_MESSAGES": 4,
	}
)

func (x EntityFieldsToRead) Enum() *EntityFieldsToRead {
	p := new(EntityFieldsToRead)
	*p = x
	return p
}

func (x EntityFieldsToRead) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntityFieldsToRead) Descriptor() protoreflect.EnumDescriptor {
	return file_entity_crud_api_model_proto_enumTypes[2].Descriptor()
}

func (EntityFieldsToRead) Type() protoreflect.EnumType {
	return &file_entity_crud_api_model_proto_enumTypes[2]
}

func (x EntityFieldsToRead) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EntityFieldsToRead.Descriptor instead.
func (EntityFieldsToRead) EnumDescriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{2}
}

type UpsertEntityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityIdentifier *EntityManagerModel.EntityIdentifier `protobuf:"bytes,1,opt,name=entity_identifier,json=entityIdentifier,proto3" json:"entity_identifier,omitempty"`
	TenantIdentifier *EntityManagerModel.TenantIdentifier `protobuf:"bytes,2,opt,name=tenant_identifier,json=tenantIdentifier,proto3" json:"tenant_identifier,omitempty"`
	Entity           []byte                               `protobuf:"bytes,3,opt,name=entity,proto3" json:"entity,omitempty"`
	RequestMeta      []byte                               `protobuf:"bytes,4,opt,name=request_meta,json=requestMeta,proto3" json:"request_meta,omitempty"`
}

func (x *UpsertEntityRequest) Reset() {
	*x = UpsertEntityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertEntityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertEntityRequest) ProtoMessage() {}

func (x *UpsertEntityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertEntityRequest.ProtoReflect.Descriptor instead.
func (*UpsertEntityRequest) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{0}
}

func (x *UpsertEntityRequest) GetEntityIdentifier() *EntityManagerModel.EntityIdentifier {
	if x != nil {
		return x.EntityIdentifier
	}
	return nil
}

func (x *UpsertEntityRequest) GetTenantIdentifier() *EntityManagerModel.TenantIdentifier {
	if x != nil {
		return x.TenantIdentifier
	}
	return nil
}

func (x *UpsertEntityRequest) GetEntity() []byte {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *UpsertEntityRequest) GetRequestMeta() []byte {
	if x != nil {
		return x.RequestMeta
	}
	return nil
}

type MigrateEntityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityIdentifier  *EntityManagerModel.EntityIdentifier `protobuf:"bytes,1,opt,name=entity_identifier,json=entityIdentifier,proto3" json:"entity_identifier,omitempty"`
	TenantIdentifier  *EntityManagerModel.TenantIdentifier `protobuf:"bytes,2,opt,name=tenant_identifier,json=tenantIdentifier,proto3" json:"tenant_identifier,omitempty"`
	Entity            []byte                               `protobuf:"bytes,3,opt,name=entity,proto3" json:"entity,omitempty"`
	RequestMeta       []byte                               `protobuf:"bytes,4,opt,name=request_meta,json=requestMeta,proto3" json:"request_meta,omitempty"`
	MigrationMode     MigrateMode                          `protobuf:"varint,5,opt,name=migration_mode,json=migrationMode,proto3,enum=com.flipkart.entitymanager.client.model.MigrateMode" json:"migration_mode,omitempty"`
	IgnoreIndexUpdate bool                                 `protobuf:"varint,6,opt,name=ignore_index_update,json=ignoreIndexUpdate,proto3" json:"ignore_index_update,omitempty"`
}

func (x *MigrateEntityRequest) Reset() {
	*x = MigrateEntityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrateEntityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateEntityRequest) ProtoMessage() {}

func (x *MigrateEntityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrateEntityRequest.ProtoReflect.Descriptor instead.
func (*MigrateEntityRequest) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{1}
}

func (x *MigrateEntityRequest) GetEntityIdentifier() *EntityManagerModel.EntityIdentifier {
	if x != nil {
		return x.EntityIdentifier
	}
	return nil
}

func (x *MigrateEntityRequest) GetTenantIdentifier() *EntityManagerModel.TenantIdentifier {
	if x != nil {
		return x.TenantIdentifier
	}
	return nil
}

func (x *MigrateEntityRequest) GetEntity() []byte {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *MigrateEntityRequest) GetRequestMeta() []byte {
	if x != nil {
		return x.RequestMeta
	}
	return nil
}

func (x *MigrateEntityRequest) GetMigrationMode() MigrateMode {
	if x != nil {
		return x.MigrationMode
	}
	return MigrateMode_DEFAULT_MIGRATION
}

func (x *MigrateEntityRequest) GetIgnoreIndexUpdate() bool {
	if x != nil {
		return x.IgnoreIndexUpdate
	}
	return false
}

type MigrateIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityIdentifier *EntityManagerModel.EntityIdentifier `protobuf:"bytes,1,opt,name=entity_identifier,json=entityIdentifier,proto3" json:"entity_identifier,omitempty"`
	TenantIdentifier *EntityManagerModel.TenantIdentifier `protobuf:"bytes,2,opt,name=tenant_identifier,json=tenantIdentifier,proto3" json:"tenant_identifier,omitempty"`
	Entity           []byte                               `protobuf:"bytes,3,opt,name=entity,proto3" json:"entity,omitempty"`
	IndexNames       []string                             `protobuf:"bytes,4,rep,name=index_names,json=indexNames,proto3" json:"index_names,omitempty"`
}

func (x *MigrateIndexRequest) Reset() {
	*x = MigrateIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrateIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateIndexRequest) ProtoMessage() {}

func (x *MigrateIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrateIndexRequest.ProtoReflect.Descriptor instead.
func (*MigrateIndexRequest) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{2}
}

func (x *MigrateIndexRequest) GetEntityIdentifier() *EntityManagerModel.EntityIdentifier {
	if x != nil {
		return x.EntityIdentifier
	}
	return nil
}

func (x *MigrateIndexRequest) GetTenantIdentifier() *EntityManagerModel.TenantIdentifier {
	if x != nil {
		return x.TenantIdentifier
	}
	return nil
}

func (x *MigrateIndexRequest) GetEntity() []byte {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *MigrateIndexRequest) GetIndexNames() []string {
	if x != nil {
		return x.IndexNames
	}
	return nil
}

// temporarily used model to populate the ordering store data
type MigrateOrderingEntityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityIdentifier *EntityManagerModel.EntityIdentifier `protobuf:"bytes,1,opt,name=entity_identifier,json=entityIdentifier,proto3" json:"entity_identifier,omitempty"`
	TenantIdentifier *EntityManagerModel.TenantIdentifier `protobuf:"bytes,2,opt,name=tenant_identifier,json=tenantIdentifier,proto3" json:"tenant_identifier,omitempty"`
	Version          int32                                `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	EntityId         string                               `protobuf:"bytes,4,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
}

func (x *MigrateOrderingEntityRequest) Reset() {
	*x = MigrateOrderingEntityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrateOrderingEntityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateOrderingEntityRequest) ProtoMessage() {}

func (x *MigrateOrderingEntityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrateOrderingEntityRequest.ProtoReflect.Descriptor instead.
func (*MigrateOrderingEntityRequest) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{3}
}

func (x *MigrateOrderingEntityRequest) GetEntityIdentifier() *EntityManagerModel.EntityIdentifier {
	if x != nil {
		return x.EntityIdentifier
	}
	return nil
}

func (x *MigrateOrderingEntityRequest) GetTenantIdentifier() *EntityManagerModel.TenantIdentifier {
	if x != nil {
		return x.TenantIdentifier
	}
	return nil
}

func (x *MigrateOrderingEntityRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *MigrateOrderingEntityRequest) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

// temporarily used model to populate the ordering store data
type MigrateOrderingEntityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMeta *ResponseMeta `protobuf:"bytes,1,opt,name=response_meta,json=responseMeta,proto3" json:"response_meta,omitempty"`
}

func (x *MigrateOrderingEntityResponse) Reset() {
	*x = MigrateOrderingEntityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrateOrderingEntityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateOrderingEntityResponse) ProtoMessage() {}

func (x *MigrateOrderingEntityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrateOrderingEntityResponse.ProtoReflect.Descriptor instead.
func (*MigrateOrderingEntityResponse) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{4}
}

func (x *MigrateOrderingEntityResponse) GetResponseMeta() *ResponseMeta {
	if x != nil {
		return x.ResponseMeta
	}
	return nil
}

type UpsertEntityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMeta *ResponseMeta `protobuf:"bytes,1,opt,name=response_meta,json=responseMeta,proto3" json:"response_meta,omitempty"`
	Entity       []byte        `protobuf:"bytes,2,opt,name=entity,proto3" json:"entity,omitempty"`
}

func (x *UpsertEntityResponse) Reset() {
	*x = UpsertEntityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertEntityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertEntityResponse) ProtoMessage() {}

func (x *UpsertEntityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertEntityResponse.ProtoReflect.Descriptor instead.
func (*UpsertEntityResponse) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{5}
}

func (x *UpsertEntityResponse) GetResponseMeta() *ResponseMeta {
	if x != nil {
		return x.ResponseMeta
	}
	return nil
}

func (x *UpsertEntityResponse) GetEntity() []byte {
	if x != nil {
		return x.Entity
	}
	return nil
}

type MigrateEntityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMeta *ResponseMeta `protobuf:"bytes,1,opt,name=response_meta,json=responseMeta,proto3" json:"response_meta,omitempty"`
	Entity       []byte        `protobuf:"bytes,2,opt,name=entity,proto3" json:"entity,omitempty"`
}

func (x *MigrateEntityResponse) Reset() {
	*x = MigrateEntityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrateEntityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateEntityResponse) ProtoMessage() {}

func (x *MigrateEntityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrateEntityResponse.ProtoReflect.Descriptor instead.
func (*MigrateEntityResponse) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{6}
}

func (x *MigrateEntityResponse) GetResponseMeta() *ResponseMeta {
	if x != nil {
		return x.ResponseMeta
	}
	return nil
}

func (x *MigrateEntityResponse) GetEntity() []byte {
	if x != nil {
		return x.Entity
	}
	return nil
}

type MigrateIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMeta *ResponseMeta `protobuf:"bytes,1,opt,name=response_meta,json=responseMeta,proto3" json:"response_meta,omitempty"`
}

func (x *MigrateIndexResponse) Reset() {
	*x = MigrateIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrateIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateIndexResponse) ProtoMessage() {}

func (x *MigrateIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrateIndexResponse.ProtoReflect.Descriptor instead.
func (*MigrateIndexResponse) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{7}
}

func (x *MigrateIndexResponse) GetResponseMeta() *ResponseMeta {
	if x != nil {
		return x.ResponseMeta
	}
	return nil
}

type ReadEntityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityIdentifier *EntityManagerModel.EntityIdentifier `protobuf:"bytes,1,opt,name=entity_identifier,json=entityIdentifier,proto3" json:"entity_identifier,omitempty"`
	TenantIdentifier *EntityManagerModel.TenantIdentifier `protobuf:"bytes,2,opt,name=tenant_identifier,json=tenantIdentifier,proto3" json:"tenant_identifier,omitempty"`
	EntityId         string                               `protobuf:"bytes,3,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	FieldsToRead     []EntityFieldsToRead                 `protobuf:"varint,4,rep,packed,name=fields_to_read,json=fieldsToRead,proto3,enum=com.flipkart.entitymanager.client.model.EntityFieldsToRead" json:"fields_to_read,omitempty"`
}

func (x *ReadEntityRequest) Reset() {
	*x = ReadEntityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadEntityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadEntityRequest) ProtoMessage() {}

func (x *ReadEntityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadEntityRequest.ProtoReflect.Descriptor instead.
func (*ReadEntityRequest) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{8}
}

func (x *ReadEntityRequest) GetEntityIdentifier() *EntityManagerModel.EntityIdentifier {
	if x != nil {
		return x.EntityIdentifier
	}
	return nil
}

func (x *ReadEntityRequest) GetTenantIdentifier() *EntityManagerModel.TenantIdentifier {
	if x != nil {
		return x.TenantIdentifier
	}
	return nil
}

func (x *ReadEntityRequest) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *ReadEntityRequest) GetFieldsToRead() []EntityFieldsToRead {
	if x != nil {
		return x.FieldsToRead
	}
	return nil
}

type ReadEntityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMeta *ResponseMeta `protobuf:"bytes,1,opt,name=response_meta,json=responseMeta,proto3" json:"response_meta,omitempty"`
	Entity       []byte        `protobuf:"bytes,2,opt,name=entity,proto3" json:"entity,omitempty"`
	Version      int32         `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	IdemMessages []byte        `protobuf:"bytes,4,opt,name=idem_messages,json=idemMessages,proto3" json:"idem_messages,omitempty"`
}

func (x *ReadEntityResponse) Reset() {
	*x = ReadEntityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadEntityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadEntityResponse) ProtoMessage() {}

func (x *ReadEntityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadEntityResponse.ProtoReflect.Descriptor instead.
func (*ReadEntityResponse) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{9}
}

func (x *ReadEntityResponse) GetResponseMeta() *ResponseMeta {
	if x != nil {
		return x.ResponseMeta
	}
	return nil
}

func (x *ReadEntityResponse) GetEntity() []byte {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *ReadEntityResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ReadEntityResponse) GetIdemMessages() []byte {
	if x != nil {
		return x.IdemMessages
	}
	return nil
}

type AuditEntityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityIdentifier *EntityManagerModel.EntityIdentifier `protobuf:"bytes,1,opt,name=entity_identifier,json=entityIdentifier,proto3" json:"entity_identifier,omitempty"`
	TenantIdentifier *EntityManagerModel.TenantIdentifier `protobuf:"bytes,2,opt,name=tenant_identifier,json=tenantIdentifier,proto3" json:"tenant_identifier,omitempty"`
	EntityId         string                               `protobuf:"bytes,3,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	Version          int32                                `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *AuditEntityRequest) Reset() {
	*x = AuditEntityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditEntityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditEntityRequest) ProtoMessage() {}

func (x *AuditEntityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditEntityRequest.ProtoReflect.Descriptor instead.
func (*AuditEntityRequest) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{10}
}

func (x *AuditEntityRequest) GetEntityIdentifier() *EntityManagerModel.EntityIdentifier {
	if x != nil {
		return x.EntityIdentifier
	}
	return nil
}

func (x *AuditEntityRequest) GetTenantIdentifier() *EntityManagerModel.TenantIdentifier {
	if x != nil {
		return x.TenantIdentifier
	}
	return nil
}

func (x *AuditEntityRequest) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *AuditEntityRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type AuditEntityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMeta *ResponseMeta `protobuf:"bytes,1,opt,name=response_meta,json=responseMeta,proto3" json:"response_meta,omitempty"`
	PrevEntity   []byte        `protobuf:"bytes,2,opt,name=prev_entity,json=prevEntity,proto3" json:"prev_entity,omitempty"`
	CurrEntity   []byte        `protobuf:"bytes,3,opt,name=curr_entity,json=currEntity,proto3" json:"curr_entity,omitempty"`
	Processed    int32         `protobuf:"varint,4,opt,name=processed,proto3" json:"processed,omitempty"`
	EntityPrefix string        `protobuf:"bytes,5,opt,name=entityPrefix,proto3" json:"entityPrefix,omitempty"`
	TenantPrefix string        `protobuf:"bytes,6,opt,name=tenantPrefix,proto3" json:"tenantPrefix,omitempty"`
	RequestMeta  []byte        `protobuf:"bytes,7,opt,name=request_meta,json=requestMeta,proto3" json:"request_meta,omitempty"`
}

func (x *AuditEntityResponse) Reset() {
	*x = AuditEntityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditEntityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditEntityResponse) ProtoMessage() {}

func (x *AuditEntityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditEntityResponse.ProtoReflect.Descriptor instead.
func (*AuditEntityResponse) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{11}
}

func (x *AuditEntityResponse) GetResponseMeta() *ResponseMeta {
	if x != nil {
		return x.ResponseMeta
	}
	return nil
}

func (x *AuditEntityResponse) GetPrevEntity() []byte {
	if x != nil {
		return x.PrevEntity
	}
	return nil
}

func (x *AuditEntityResponse) GetCurrEntity() []byte {
	if x != nil {
		return x.CurrEntity
	}
	return nil
}

func (x *AuditEntityResponse) GetProcessed() int32 {
	if x != nil {
		return x.Processed
	}
	return 0
}

func (x *AuditEntityResponse) GetEntityPrefix() string {
	if x != nil {
		return x.EntityPrefix
	}
	return ""
}

func (x *AuditEntityResponse) GetTenantPrefix() string {
	if x != nil {
		return x.TenantPrefix
	}
	return ""
}

func (x *AuditEntityResponse) GetRequestMeta() []byte {
	if x != nil {
		return x.RequestMeta
	}
	return nil
}

type BulkReadEntityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityIdentifier *EntityManagerModel.EntityIdentifier `protobuf:"bytes,1,opt,name=entity_identifier,json=entityIdentifier,proto3" json:"entity_identifier,omitempty"`
	TenantIdentifier *EntityManagerModel.TenantIdentifier `protobuf:"bytes,2,opt,name=tenant_identifier,json=tenantIdentifier,proto3" json:"tenant_identifier,omitempty"`
	EntityId         []string                             `protobuf:"bytes,3,rep,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	FieldsToRead     []EntityFieldsToRead                 `protobuf:"varint,4,rep,packed,name=fields_to_read,json=fieldsToRead,proto3,enum=com.flipkart.entitymanager.client.model.EntityFieldsToRead" json:"fields_to_read,omitempty"`
}

func (x *BulkReadEntityRequest) Reset() {
	*x = BulkReadEntityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkReadEntityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkReadEntityRequest) ProtoMessage() {}

func (x *BulkReadEntityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkReadEntityRequest.ProtoReflect.Descriptor instead.
func (*BulkReadEntityRequest) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{12}
}

func (x *BulkReadEntityRequest) GetEntityIdentifier() *EntityManagerModel.EntityIdentifier {
	if x != nil {
		return x.EntityIdentifier
	}
	return nil
}

func (x *BulkReadEntityRequest) GetTenantIdentifier() *EntityManagerModel.TenantIdentifier {
	if x != nil {
		return x.TenantIdentifier
	}
	return nil
}

func (x *BulkReadEntityRequest) GetEntityId() []string {
	if x != nil {
		return x.EntityId
	}
	return nil
}

func (x *BulkReadEntityRequest) GetFieldsToRead() []EntityFieldsToRead {
	if x != nil {
		return x.FieldsToRead
	}
	return nil
}

type IndexValueEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId    string `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	IndexEntity []byte `protobuf:"bytes,2,opt,name=index_entity,json=indexEntity,proto3" json:"index_entity,omitempty"`
}

func (x *IndexValueEntity) Reset() {
	*x = IndexValueEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexValueEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexValueEntity) ProtoMessage() {}

func (x *IndexValueEntity) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexValueEntity.ProtoReflect.Descriptor instead.
func (*IndexValueEntity) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{13}
}

func (x *IndexValueEntity) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *IndexValueEntity) GetIndexEntity() []byte {
	if x != nil {
		return x.IndexEntity
	}
	return nil
}

type BulkReadEntityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMeta     *ResponseMeta       `protobuf:"bytes,1,opt,name=response_meta,json=responseMeta,proto3" json:"response_meta,omitempty"`
	Entity           [][]byte            `protobuf:"bytes,2,rep,name=entity,proto3" json:"entity,omitempty"`
	IndexValueEntity []*IndexValueEntity `protobuf:"bytes,4,rep,name=index_value_entity,json=indexValueEntity,proto3" json:"index_value_entity,omitempty"`
	MorePages        bool                `protobuf:"varint,3,opt,name=more_pages,json=morePages,proto3" json:"more_pages,omitempty"`
}

func (x *BulkReadEntityResponse) Reset() {
	*x = BulkReadEntityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkReadEntityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkReadEntityResponse) ProtoMessage() {}

func (x *BulkReadEntityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkReadEntityResponse.ProtoReflect.Descriptor instead.
func (*BulkReadEntityResponse) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{14}
}

func (x *BulkReadEntityResponse) GetResponseMeta() *ResponseMeta {
	if x != nil {
		return x.ResponseMeta
	}
	return nil
}

func (x *BulkReadEntityResponse) GetEntity() [][]byte {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *BulkReadEntityResponse) GetIndexValueEntity() []*IndexValueEntity {
	if x != nil {
		return x.IndexValueEntity
	}
	return nil
}

func (x *BulkReadEntityResponse) GetMorePages() bool {
	if x != nil {
		return x.MorePages
	}
	return false
}

type IndexQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityIdentifier *EntityManagerModel.EntityIdentifier `protobuf:"bytes,1,opt,name=entity_identifier,json=entityIdentifier,proto3" json:"entity_identifier,omitempty"`
	TenantIdentifier *EntityManagerModel.TenantIdentifier `protobuf:"bytes,2,opt,name=tenant_identifier,json=tenantIdentifier,proto3" json:"tenant_identifier,omitempty"`
	QueryName        string                               `protobuf:"bytes,3,opt,name=query_name,json=queryName,proto3" json:"query_name,omitempty"`
	IndexKey         []string                             `protobuf:"bytes,7,rep,name=index_key,json=indexKey,proto3" json:"index_key,omitempty"`
	AfterEntityId    string                               `protobuf:"bytes,5,opt,name=after_entity_id,json=afterEntityId,proto3" json:"after_entity_id,omitempty"`
	PageSize         int32                                `protobuf:"varint,8,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Filter           *Filter                              `protobuf:"bytes,9,opt,name=filter,proto3" json:"filter,omitempty"`
	FetchMode        FetchMode                            `protobuf:"varint,10,opt,name=fetch_mode,json=fetchMode,proto3,enum=com.flipkart.entitymanager.client.model.FetchMode" json:"fetch_mode,omitempty"`
	PageNumber       int32                                `protobuf:"varint,11,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
}

func (x *IndexQueryRequest) Reset() {
	*x = IndexQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexQueryRequest) ProtoMessage() {}

func (x *IndexQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexQueryRequest.ProtoReflect.Descriptor instead.
func (*IndexQueryRequest) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{15}
}

func (x *IndexQueryRequest) GetEntityIdentifier() *EntityManagerModel.EntityIdentifier {
	if x != nil {
		return x.EntityIdentifier
	}
	return nil
}

func (x *IndexQueryRequest) GetTenantIdentifier() *EntityManagerModel.TenantIdentifier {
	if x != nil {
		return x.TenantIdentifier
	}
	return nil
}

func (x *IndexQueryRequest) GetQueryName() string {
	if x != nil {
		return x.QueryName
	}
	return ""
}

func (x *IndexQueryRequest) GetIndexKey() []string {
	if x != nil {
		return x.IndexKey
	}
	return nil
}

func (x *IndexQueryRequest) GetAfterEntityId() string {
	if x != nil {
		return x.AfterEntityId
	}
	return ""
}

func (x *IndexQueryRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *IndexQueryRequest) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *IndexQueryRequest) GetFetchMode() FetchMode {
	if x != nil {
		return x.FetchMode
	}
	return FetchMode_FETCH_ENTITY
}

func (x *IndexQueryRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type Target struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Target:
	//	*Target_TargetString
	//	*Target_TargetLong
	//	*Target_TargetDouble
	//	*Target_TargetInt
	//	*Target_TargetFloat
	//	*Target_TargetBool
	Target isTarget_Target `protobuf_oneof:"target"`
}

func (x *Target) Reset() {
	*x = Target{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{16}
}

func (m *Target) GetTarget() isTarget_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (x *Target) GetTargetString() string {
	if x, ok := x.GetTarget().(*Target_TargetString); ok {
		return x.TargetString
	}
	return ""
}

func (x *Target) GetTargetLong() int64 {
	if x, ok := x.GetTarget().(*Target_TargetLong); ok {
		return x.TargetLong
	}
	return 0
}

func (x *Target) GetTargetDouble() float64 {
	if x, ok := x.GetTarget().(*Target_TargetDouble); ok {
		return x.TargetDouble
	}
	return 0
}

func (x *Target) GetTargetInt() int32 {
	if x, ok := x.GetTarget().(*Target_TargetInt); ok {
		return x.TargetInt
	}
	return 0
}

func (x *Target) GetTargetFloat() float32 {
	if x, ok := x.GetTarget().(*Target_TargetFloat); ok {
		return x.TargetFloat
	}
	return 0
}

func (x *Target) GetTargetBool() bool {
	if x, ok := x.GetTarget().(*Target_TargetBool); ok {
		return x.TargetBool
	}
	return false
}

type isTarget_Target interface {
	isTarget_Target()
}

type Target_TargetString struct {
	TargetString string `protobuf:"bytes,1,opt,name=target_string,json=targetString,proto3,oneof"`
}

type Target_TargetLong struct {
	TargetLong int64 `protobuf:"varint,2,opt,name=target_long,json=targetLong,proto3,oneof"`
}

type Target_TargetDouble struct {
	TargetDouble float64 `protobuf:"fixed64,3,opt,name=target_double,json=targetDouble,proto3,oneof"`
}

type Target_TargetInt struct {
	TargetInt int32 `protobuf:"varint,4,opt,name=target_int,json=targetInt,proto3,oneof"`
}

type Target_TargetFloat struct {
	TargetFloat float32 `protobuf:"fixed32,5,opt,name=target_float,json=targetFloat,proto3,oneof"`
}

type Target_TargetBool struct {
	TargetBool bool `protobuf:"varint,6,opt,name=target_bool,json=targetBool,proto3,oneof"`
}

func (*Target_TargetString) isTarget_Target() {}

func (*Target_TargetLong) isTarget_Target() {}

func (*Target_TargetDouble) isTarget_Target() {}

func (*Target_TargetInt) isTarget_Target() {}

func (*Target_TargetFloat) isTarget_Target() {}

func (*Target_TargetBool) isTarget_Target() {}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Filter:
	//	*Filter_EqualFilter
	//	*Filter_InFilter
	//	*Filter_LessThanFilter
	//	*Filter_GreaterThanFilter
	//	*Filter_LessThanEqFilter
	//	*Filter_GreaterThanEqFilter
	//	*Filter_NotEqualFilter
	//	*Filter_LeftIncludeRangeFilter
	//	*Filter_RightIncludeRangeFilter
	//	*Filter_RangeIncludeFilter
	//	*Filter_RangeFilter
	//	*Filter_AndFilter
	//	*Filter_AnyFilter
	//	*Filter_OrFilter
	//	*Filter_IsEmptyFilter
	//	*Filter_IsNotEmptyFilter
	//	*Filter_NotFilter
	//	*Filter_AllFilter
	Filter isFilter_Filter `protobuf_oneof:"filter"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{17}
}

func (m *Filter) GetFilter() isFilter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *Filter) GetEqualFilter() *EqualToFilter {
	if x, ok := x.GetFilter().(*Filter_EqualFilter); ok {
		return x.EqualFilter
	}
	return nil
}

func (x *Filter) GetInFilter() *InFilter {
	if x, ok := x.GetFilter().(*Filter_InFilter); ok {
		return x.InFilter
	}
	return nil
}

func (x *Filter) GetLessThanFilter() *LessThanFilter {
	if x, ok := x.GetFilter().(*Filter_LessThanFilter); ok {
		return x.LessThanFilter
	}
	return nil
}

func (x *Filter) GetGreaterThanFilter() *GreaterThanFilter {
	if x, ok := x.GetFilter().(*Filter_GreaterThanFilter); ok {
		return x.GreaterThanFilter
	}
	return nil
}

func (x *Filter) GetLessThanEqFilter() *LessThanEqualFilter {
	if x, ok := x.GetFilter().(*Filter_LessThanEqFilter); ok {
		return x.LessThanEqFilter
	}
	return nil
}

func (x *Filter) GetGreaterThanEqFilter() *GreaterThanEqualFilter {
	if x, ok := x.GetFilter().(*Filter_GreaterThanEqFilter); ok {
		return x.GreaterThanEqFilter
	}
	return nil
}

func (x *Filter) GetNotEqualFilter() *NotEqualFilter {
	if x, ok := x.GetFilter().(*Filter_NotEqualFilter); ok {
		return x.NotEqualFilter
	}
	return nil
}

func (x *Filter) GetLeftIncludeRangeFilter() *LeftIncludeRangeFilter {
	if x, ok := x.GetFilter().(*Filter_LeftIncludeRangeFilter); ok {
		return x.LeftIncludeRangeFilter
	}
	return nil
}

func (x *Filter) GetRightIncludeRangeFilter() *RightIncludeRangeFilter {
	if x, ok := x.GetFilter().(*Filter_RightIncludeRangeFilter); ok {
		return x.RightIncludeRangeFilter
	}
	return nil
}

func (x *Filter) GetRangeIncludeFilter() *RangeIncludeFilter {
	if x, ok := x.GetFilter().(*Filter_RangeIncludeFilter); ok {
		return x.RangeIncludeFilter
	}
	return nil
}

func (x *Filter) GetRangeFilter() *RangeFilter {
	if x, ok := x.GetFilter().(*Filter_RangeFilter); ok {
		return x.RangeFilter
	}
	return nil
}

func (x *Filter) GetAndFilter() *AndFilter {
	if x, ok := x.GetFilter().(*Filter_AndFilter); ok {
		return x.AndFilter
	}
	return nil
}

func (x *Filter) GetAnyFilter() *AnyFilter {
	if x, ok := x.GetFilter().(*Filter_AnyFilter); ok {
		return x.AnyFilter
	}
	return nil
}

func (x *Filter) GetOrFilter() *OrFilter {
	if x, ok := x.GetFilter().(*Filter_OrFilter); ok {
		return x.OrFilter
	}
	return nil
}

func (x *Filter) GetIsEmptyFilter() *IsEmptyFilter {
	if x, ok := x.GetFilter().(*Filter_IsEmptyFilter); ok {
		return x.IsEmptyFilter
	}
	return nil
}

func (x *Filter) GetIsNotEmptyFilter() *IsNotEmptyFilter {
	if x, ok := x.GetFilter().(*Filter_IsNotEmptyFilter); ok {
		return x.IsNotEmptyFilter
	}
	return nil
}

func (x *Filter) GetNotFilter() *NotFilter {
	if x, ok := x.GetFilter().(*Filter_NotFilter); ok {
		return x.NotFilter
	}
	return nil
}

func (x *Filter) GetAllFilter() *AllFilter {
	if x, ok := x.GetFilter().(*Filter_AllFilter); ok {
		return x.AllFilter
	}
	return nil
}

type isFilter_Filter interface {
	isFilter_Filter()
}

type Filter_EqualFilter struct {
	EqualFilter *EqualToFilter `protobuf:"bytes,1,opt,name=equal_filter,json=equalFilter,proto3,oneof"`
}

type Filter_InFilter struct {
	InFilter *InFilter `protobuf:"bytes,2,opt,name=in_filter,json=inFilter,proto3,oneof"`
}

type Filter_LessThanFilter struct {
	LessThanFilter *LessThanFilter `protobuf:"bytes,3,opt,name=less_than_filter,json=lessThanFilter,proto3,oneof"`
}

type Filter_GreaterThanFilter struct {
	GreaterThanFilter *GreaterThanFilter `protobuf:"bytes,4,opt,name=greater_than_filter,json=greaterThanFilter,proto3,oneof"`
}

type Filter_LessThanEqFilter struct {
	LessThanEqFilter *LessThanEqualFilter `protobuf:"bytes,5,opt,name=less_than_eq_filter,json=lessThanEqFilter,proto3,oneof"`
}

type Filter_GreaterThanEqFilter struct {
	GreaterThanEqFilter *GreaterThanEqualFilter `protobuf:"bytes,6,opt,name=greater_than_eq_filter,json=greaterThanEqFilter,proto3,oneof"`
}

type Filter_NotEqualFilter struct {
	NotEqualFilter *NotEqualFilter `protobuf:"bytes,7,opt,name=not_equal_filter,json=notEqualFilter,proto3,oneof"`
}

type Filter_LeftIncludeRangeFilter struct {
	LeftIncludeRangeFilter *LeftIncludeRangeFilter `protobuf:"bytes,8,opt,name=left_include_range_filter,json=leftIncludeRangeFilter,proto3,oneof"`
}

type Filter_RightIncludeRangeFilter struct {
	RightIncludeRangeFilter *RightIncludeRangeFilter `protobuf:"bytes,9,opt,name=right_include_range_filter,json=rightIncludeRangeFilter,proto3,oneof"`
}

type Filter_RangeIncludeFilter struct {
	RangeIncludeFilter *RangeIncludeFilter `protobuf:"bytes,10,opt,name=range_include_filter,json=rangeIncludeFilter,proto3,oneof"`
}

type Filter_RangeFilter struct {
	RangeFilter *RangeFilter `protobuf:"bytes,11,opt,name=range_filter,json=rangeFilter,proto3,oneof"`
}

type Filter_AndFilter struct {
	AndFilter *AndFilter `protobuf:"bytes,12,opt,name=and_filter,json=andFilter,proto3,oneof"`
}

type Filter_AnyFilter struct {
	AnyFilter *AnyFilter `protobuf:"bytes,13,opt,name=any_filter,json=anyFilter,proto3,oneof"`
}

type Filter_OrFilter struct {
	OrFilter *OrFilter `protobuf:"bytes,14,opt,name=or_filter,json=orFilter,proto3,oneof"`
}

type Filter_IsEmptyFilter struct {
	IsEmptyFilter *IsEmptyFilter `protobuf:"bytes,15,opt,name=is_empty_filter,json=isEmptyFilter,proto3,oneof"`
}

type Filter_IsNotEmptyFilter struct {
	IsNotEmptyFilter *IsNotEmptyFilter `protobuf:"bytes,16,opt,name=is_not_empty_filter,json=isNotEmptyFilter,proto3,oneof"`
}

type Filter_NotFilter struct {
	NotFilter *NotFilter `protobuf:"bytes,17,opt,name=not_filter,json=notFilter,proto3,oneof"`
}

type Filter_AllFilter struct {
	AllFilter *AllFilter `protobuf:"bytes,18,opt,name=all_filter,json=allFilter,proto3,oneof"`
}

func (*Filter_EqualFilter) isFilter_Filter() {}

func (*Filter_InFilter) isFilter_Filter() {}

func (*Filter_LessThanFilter) isFilter_Filter() {}

func (*Filter_GreaterThanFilter) isFilter_Filter() {}

func (*Filter_LessThanEqFilter) isFilter_Filter() {}

func (*Filter_GreaterThanEqFilter) isFilter_Filter() {}

func (*Filter_NotEqualFilter) isFilter_Filter() {}

func (*Filter_LeftIncludeRangeFilter) isFilter_Filter() {}

func (*Filter_RightIncludeRangeFilter) isFilter_Filter() {}

func (*Filter_RangeIncludeFilter) isFilter_Filter() {}

func (*Filter_RangeFilter) isFilter_Filter() {}

func (*Filter_AndFilter) isFilter_Filter() {}

func (*Filter_AnyFilter) isFilter_Filter() {}

func (*Filter_OrFilter) isFilter_Filter() {}

func (*Filter_IsEmptyFilter) isFilter_Filter() {}

func (*Filter_IsNotEmptyFilter) isFilter_Filter() {}

func (*Filter_NotFilter) isFilter_Filter() {}

func (*Filter_AllFilter) isFilter_Filter() {}

type EqualToFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldName string  `protobuf:"bytes,1,opt,name=field_name,json=fieldName,proto3" json:"field_name,omitempty"`
	Target    *Target `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *EqualToFilter) Reset() {
	*x = EqualToFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EqualToFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EqualToFilter) ProtoMessage() {}

func (x *EqualToFilter) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EqualToFilter.ProtoReflect.Descriptor instead.
func (*EqualToFilter) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{18}
}

func (x *EqualToFilter) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *EqualToFilter) GetTarget() *Target {
	if x != nil {
		return x.Target
	}
	return nil
}

type IsEmptyFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldName string `protobuf:"bytes,1,opt,name=field_name,json=fieldName,proto3" json:"field_name,omitempty"`
}

func (x *IsEmptyFilter) Reset() {
	*x = IsEmptyFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsEmptyFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsEmptyFilter) ProtoMessage() {}

func (x *IsEmptyFilter) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsEmptyFilter.ProtoReflect.Descriptor instead.
func (*IsEmptyFilter) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{19}
}

func (x *IsEmptyFilter) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

type NotFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter *Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *NotFilter) Reset() {
	*x = NotFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotFilter) ProtoMessage() {}

func (x *NotFilter) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotFilter.ProtoReflect.Descriptor instead.
func (*NotFilter) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{20}
}

func (x *NotFilter) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type IsNotEmptyFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldName string `protobuf:"bytes,1,opt,name=field_name,json=fieldName,proto3" json:"field_name,omitempty"`
}

func (x *IsNotEmptyFilter) Reset() {
	*x = IsNotEmptyFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsNotEmptyFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsNotEmptyFilter) ProtoMessage() {}

func (x *IsNotEmptyFilter) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsNotEmptyFilter.ProtoReflect.Descriptor instead.
func (*IsNotEmptyFilter) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{21}
}

func (x *IsNotEmptyFilter) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

type InFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldName string    `protobuf:"bytes,1,opt,name=field_name,json=fieldName,proto3" json:"field_name,omitempty"`
	Target    []*Target `protobuf:"bytes,2,rep,name=target,proto3" json:"target,omitempty"`
}

func (x *InFilter) Reset() {
	*x = InFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InFilter) ProtoMessage() {}

func (x *InFilter) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InFilter.ProtoReflect.Descriptor instead.
func (*InFilter) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{22}
}

func (x *InFilter) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *InFilter) GetTarget() []*Target {
	if x != nil {
		return x.Target
	}
	return nil
}

type LessThanFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldName string  `protobuf:"bytes,1,opt,name=field_name,json=fieldName,proto3" json:"field_name,omitempty"`
	Target    *Target `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *LessThanFilter) Reset() {
	*x = LessThanFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessThanFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessThanFilter) ProtoMessage() {}

func (x *LessThanFilter) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessThanFilter.ProtoReflect.Descriptor instead.
func (*LessThanFilter) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{23}
}

func (x *LessThanFilter) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *LessThanFilter) GetTarget() *Target {
	if x != nil {
		return x.Target
	}
	return nil
}

type GreaterThanFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldName string  `protobuf:"bytes,1,opt,name=field_name,json=fieldName,proto3" json:"field_name,omitempty"`
	Target    *Target `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *GreaterThanFilter) Reset() {
	*x = GreaterThanFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GreaterThanFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GreaterThanFilter) ProtoMessage() {}

func (x *GreaterThanFilter) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GreaterThanFilter.ProtoReflect.Descriptor instead.
func (*GreaterThanFilter) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{24}
}

func (x *GreaterThanFilter) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *GreaterThanFilter) GetTarget() *Target {
	if x != nil {
		return x.Target
	}
	return nil
}

type LessThanEqualFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldName string  `protobuf:"bytes,1,opt,name=field_name,json=fieldName,proto3" json:"field_name,omitempty"`
	Target    *Target `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *LessThanEqualFilter) Reset() {
	*x = LessThanEqualFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessThanEqualFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessThanEqualFilter) ProtoMessage() {}

func (x *LessThanEqualFilter) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessThanEqualFilter.ProtoReflect.Descriptor instead.
func (*LessThanEqualFilter) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{25}
}

func (x *LessThanEqualFilter) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *LessThanEqualFilter) GetTarget() *Target {
	if x != nil {
		return x.Target
	}
	return nil
}

type GreaterThanEqualFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldName string  `protobuf:"bytes,1,opt,name=field_name,json=fieldName,proto3" json:"field_name,omitempty"`
	Target    *Target `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *GreaterThanEqualFilter) Reset() {
	*x = GreaterThanEqualFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GreaterThanEqualFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GreaterThanEqualFilter) ProtoMessage() {}

func (x *GreaterThanEqualFilter) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GreaterThanEqualFilter.ProtoReflect.Descriptor instead.
func (*GreaterThanEqualFilter) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{26}
}

func (x *GreaterThanEqualFilter) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *GreaterThanEqualFilter) GetTarget() *Target {
	if x != nil {
		return x.Target
	}
	return nil
}

type NotEqualFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldName string  `protobuf:"bytes,1,opt,name=field_name,json=fieldName,proto3" json:"field_name,omitempty"`
	Target    *Target `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *NotEqualFilter) Reset() {
	*x = NotEqualFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotEqualFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotEqualFilter) ProtoMessage() {}

func (x *NotEqualFilter) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotEqualFilter.ProtoReflect.Descriptor instead.
func (*NotEqualFilter) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{27}
}

func (x *NotEqualFilter) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *NotEqualFilter) GetTarget() *Target {
	if x != nil {
		return x.Target
	}
	return nil
}

type LeftIncludeRangeFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldName string    `protobuf:"bytes,1,opt,name=field_name,json=fieldName,proto3" json:"field_name,omitempty"`
	Target    []*Target `protobuf:"bytes,2,rep,name=target,proto3" json:"target,omitempty"`
}

func (x *LeftIncludeRangeFilter) Reset() {
	*x = LeftIncludeRangeFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeftIncludeRangeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeftIncludeRangeFilter) ProtoMessage() {}

func (x *LeftIncludeRangeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeftIncludeRangeFilter.ProtoReflect.Descriptor instead.
func (*LeftIncludeRangeFilter) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{28}
}

func (x *LeftIncludeRangeFilter) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *LeftIncludeRangeFilter) GetTarget() []*Target {
	if x != nil {
		return x.Target
	}
	return nil
}

type RightIncludeRangeFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldName string    `protobuf:"bytes,1,opt,name=field_name,json=fieldName,proto3" json:"field_name,omitempty"`
	Target    []*Target `protobuf:"bytes,2,rep,name=target,proto3" json:"target,omitempty"`
}

func (x *RightIncludeRangeFilter) Reset() {
	*x = RightIncludeRangeFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RightIncludeRangeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RightIncludeRangeFilter) ProtoMessage() {}

func (x *RightIncludeRangeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RightIncludeRangeFilter.ProtoReflect.Descriptor instead.
func (*RightIncludeRangeFilter) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{29}
}

func (x *RightIncludeRangeFilter) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *RightIncludeRangeFilter) GetTarget() []*Target {
	if x != nil {
		return x.Target
	}
	return nil
}

type RangeIncludeFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldName string    `protobuf:"bytes,1,opt,name=field_name,json=fieldName,proto3" json:"field_name,omitempty"`
	Target    []*Target `protobuf:"bytes,2,rep,name=target,proto3" json:"target,omitempty"`
}

func (x *RangeIncludeFilter) Reset() {
	*x = RangeIncludeFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RangeIncludeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeIncludeFilter) ProtoMessage() {}

func (x *RangeIncludeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeIncludeFilter.ProtoReflect.Descriptor instead.
func (*RangeIncludeFilter) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{30}
}

func (x *RangeIncludeFilter) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *RangeIncludeFilter) GetTarget() []*Target {
	if x != nil {
		return x.Target
	}
	return nil
}

type RangeFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldName string    `protobuf:"bytes,1,opt,name=field_name,json=fieldName,proto3" json:"field_name,omitempty"`
	Target    []*Target `protobuf:"bytes,2,rep,name=target,proto3" json:"target,omitempty"`
}

func (x *RangeFilter) Reset() {
	*x = RangeFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RangeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeFilter) ProtoMessage() {}

func (x *RangeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeFilter.ProtoReflect.Descriptor instead.
func (*RangeFilter) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{31}
}

func (x *RangeFilter) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *RangeFilter) GetTarget() []*Target {
	if x != nil {
		return x.Target
	}
	return nil
}

type AndFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters []*Filter `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *AndFilter) Reset() {
	*x = AndFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndFilter) ProtoMessage() {}

func (x *AndFilter) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndFilter.ProtoReflect.Descriptor instead.
func (*AndFilter) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{32}
}

func (x *AndFilter) GetFilters() []*Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type OrFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters []*Filter `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *OrFilter) Reset() {
	*x = OrFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrFilter) ProtoMessage() {}

func (x *OrFilter) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrFilter.ProtoReflect.Descriptor instead.
func (*OrFilter) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{33}
}

func (x *OrFilter) GetFilters() []*Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type AnyFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldName string    `protobuf:"bytes,1,opt,name=fieldName,proto3" json:"fieldName,omitempty"`
	Target    []*Target `protobuf:"bytes,2,rep,name=target,proto3" json:"target,omitempty"`
}

func (x *AnyFilter) Reset() {
	*x = AnyFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnyFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnyFilter) ProtoMessage() {}

func (x *AnyFilter) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnyFilter.ProtoReflect.Descriptor instead.
func (*AnyFilter) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{34}
}

func (x *AnyFilter) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *AnyFilter) GetTarget() []*Target {
	if x != nil {
		return x.Target
	}
	return nil
}

type AllFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldName string    `protobuf:"bytes,1,opt,name=fieldName,proto3" json:"fieldName,omitempty"`
	Target    []*Target `protobuf:"bytes,2,rep,name=target,proto3" json:"target,omitempty"`
}

func (x *AllFilter) Reset() {
	*x = AllFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_crud_api_model_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllFilter) ProtoMessage() {}

func (x *AllFilter) ProtoReflect() protoreflect.Message {
	mi := &file_entity_crud_api_model_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllFilter.ProtoReflect.Descriptor instead.
func (*AllFilter) Descriptor() ([]byte, []int) {
	return file_entity_crud_api_model_proto_rawDescGZIP(), []int{35}
}

func (x *AllFilter) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *AllFilter) GetTarget() []*Target {
	if x != nil {
		return x.Target
	}
	return nil
}

var File_entity_crud_api_model_proto protoreflect.FileDescriptor

var file_entity_crud_api_model_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x72, 0x75, 0x64, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x27, 0x63,
	0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x26, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0, 0x02, 0x0a, 0x13,
	0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x6e, 0x0a, 0x11, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x52, 0x10, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x12, 0x6e, 0x0a, 0x11, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x52, 0x10, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x22, 0xbe,
	0x03, 0x0a, 0x14, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6e, 0x0a, 0x11, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72,
	0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x10, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x6e, 0x0a, 0x11, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72,
	0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x10, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x12, 0x5b, 0x0a, 0x0e, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x0d, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x2e, 0x0a, 0x13, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x67,
	0x6e, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22,
	0xae, 0x02, 0x0a, 0x13, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6e, 0x0a, 0x11, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72,
	0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x10, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x6e, 0x0a, 0x11, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72,
	0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x10, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x22, 0xb5, 0x02, 0x0a, 0x1c, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x6e, 0x0a, 0x11, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52,
	0x10, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x12, 0x6e, 0x0a, 0x11, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x54,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52,
	0x10, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x7b, 0x0a, 0x1d, 0x4d, 0x69, 0x67, 0x72,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0d, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x22, 0x8a, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a,
	0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70,
	0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x22, 0x8b, 0x01, 0x0a, 0x15, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0d,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61,
	0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x22, 0x72, 0x0a, 0x14, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x22, 0xf3, 0x02, 0x0a, 0x11, 0x52, 0x65, 0x61, 0x64, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6e, 0x0a, 0x11, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70,
	0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x10, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x6e, 0x0a, 0x11, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70,
	0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x10, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x61, 0x0a, 0x0e, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x3b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x52, 0x0c, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x22, 0xc7, 0x01, 0x0a, 0x12, 0x52,
	0x65, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5a, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66,
	0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x16, 0x0a,
	0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x23, 0x0a, 0x0d, 0x69, 0x64, 0x65, 0x6d, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x69, 0x64, 0x65, 0x6d, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x22, 0xab, 0x02, 0x0a, 0x12, 0x41, 0x75, 0x64, 0x69, 0x74, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6e, 0x0a, 0x11, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69,
	0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x10, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x6e, 0x0a, 0x11, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69,
	0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x10, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0xbc, 0x02, 0x0a, 0x13, 0x41, 0x75, 0x64, 0x69, 0x74, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0d, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x72, 0x65,
	0x76, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x5f,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x75,
	0x72, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x21,
	0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x22, 0xf7, 0x02, 0x0a, 0x15, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x65, 0x61, 0x64, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6e, 0x0a, 0x11, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69,
	0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x10, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x6e, 0x0a, 0x11, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69,
	0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x10, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x61, 0x0a, 0x0e, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x3b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x52, 0x0c, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x22, 0x52, 0x0a, 0x10, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0b, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22,
	0x94, 0x02, 0x0a, 0x16, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x65, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0d, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x67,
	0x0a, 0x12, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x10, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x72, 0x65, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6d, 0x6f, 0x72,
	0x65, 0x50, 0x61, 0x67, 0x65, 0x73, 0x22, 0xb1, 0x04, 0x0a, 0x11, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6e, 0x0a, 0x11,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c,
	0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x10, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x6e, 0x0a, 0x11,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c,
	0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x10, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x66, 0x74, 0x65,
	0x72, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x61, 0x66, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x47, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x51, 0x0a, 0x0a, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x09,
	0x66, 0x65, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xec, 0x01, 0x0a, 0x06, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0b,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x6f, 0x6e, 0x67, 0x12,
	0x25, 0x0a, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x09, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52,
	0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x21, 0x0a, 0x0b,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6c, 0x42,
	0x08, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x9f, 0x0e, 0x0a, 0x06, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x5b, 0x0a, 0x0c, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x5f, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x54, 0x6f, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x50, 0x0a, 0x09, 0x69, 0x6e, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b,
	0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49,
	0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x63, 0x0a, 0x10, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x68, 0x61, 0x6e,
	0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0e, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68,
	0x61, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x6c, 0x0a, 0x13, 0x67, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x72, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70,
	0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x47, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x48, 0x00, 0x52, 0x11, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x6d, 0x0a, 0x13, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x74,
	0x68, 0x61, 0x6e, 0x5f, 0x65, 0x71, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61,
	0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4c, 0x65,
	0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x48, 0x00, 0x52, 0x10, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x76, 0x0a, 0x16, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x5f, 0x74, 0x68, 0x61, 0x6e, 0x5f, 0x65, 0x71, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70,
	0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x47, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x13, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x72, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x63, 0x0a,
	0x10, 0x6e, 0x6f, 0x74, 0x5f, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c,
	0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x4e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x7c, 0x0a, 0x19, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70,
	0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x4c, 0x65, 0x66, 0x74, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x16, 0x6c, 0x65, 0x66, 0x74, 0x49, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x7f, 0x0a, 0x1a, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b,
	0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52,
	0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x17, 0x72, 0x69, 0x67, 0x68, 0x74, 0x49,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x6f, 0x0a, 0x14, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x49,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x12,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x59, 0x0a, 0x0c, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66,
	0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00,
	0x52, 0x0b, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x53, 0x0a,
	0x0a, 0x61, 0x6e, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x6e, 0x64, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x09, 0x61, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x53, 0x0a, 0x0a, 0x61, 0x6e, 0x79, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69,
	0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x41, 0x6e, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x09, 0x61, 0x6e,
	0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x09, 0x6f, 0x72, 0x5f, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4f, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52,
	0x08, 0x6f, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x60, 0x0a, 0x0f, 0x69, 0x73, 0x5f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72,
	0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49, 0x73, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0d, 0x69, 0x73,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x6a, 0x0a, 0x13, 0x69,
	0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x5f, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66,
	0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x49, 0x73, 0x4e, 0x6f, 0x74, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x10, 0x69, 0x73, 0x4e, 0x6f, 0x74, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x53, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x5f, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4e, 0x6f, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48,
	0x00, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x53, 0x0a, 0x0a,
	0x61, 0x6c, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x6c, 0x6c, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x09, 0x61, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x77, 0x0a, 0x0d, 0x45,
	0x71, 0x75, 0x61, 0x6c, 0x54, 0x6f, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x22, 0x2e, 0x0a, 0x0d, 0x49, 0x73, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x54, 0x0a, 0x09, 0x4e, 0x6f, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x47, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x31, 0x0a, 0x10, 0x49, 0x73,
	0x4e, 0x6f, 0x74, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x72, 0x0a,
	0x08, 0x49, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66,
	0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x22, 0x78, 0x0a, 0x0e, 0x4c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72,
	0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x7b, 0x0a, 0x11, 0x47,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x47, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x7d, 0x0a, 0x13, 0x4c, 0x65, 0x73, 0x73,
	0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x47,
	0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x80, 0x01, 0x0a, 0x16, 0x47, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x47, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x78, 0x0a, 0x0e, 0x4e, 0x6f,
	0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x22, 0x80, 0x01, 0x0a, 0x16, 0x4c, 0x65, 0x66, 0x74, 0x49, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x47,
	0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x17, 0x52, 0x69, 0x67, 0x68,
	0x74, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72,
	0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x7c, 0x0a, 0x12, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x47, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x75, 0x0a, 0x0b, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c,
	0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x22, 0x56, 0x0a, 0x09, 0x41, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x49, 0x0a,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x55, 0x0a, 0x08, 0x4f, 0x72, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70,
	0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22,
	0x72, 0x0a, 0x09, 0x41, 0x6e, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x22, 0x72, 0x0a, 0x09, 0x41, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x47,
	0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2a, 0x38, 0x0a, 0x0b, 0x4d, 0x69, 0x67, 0x72, 0x61,
	0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c,
	0x54, 0x5f, 0x4d, 0x49, 0x47, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a,
	0x0e, 0x4c, 0x49, 0x56, 0x45, 0x5f, 0x4d, 0x49, 0x47, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x01, 0x2a, 0x46, 0x0a, 0x09, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x0c, 0x46, 0x45, 0x54, 0x43, 0x48, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x10, 0x00,
	0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x45, 0x54, 0x43, 0x48, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x10,
	0x01, 0x12, 0x16, 0x0a, 0x12, 0x46, 0x45, 0x54, 0x43, 0x48, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54,
	0x59, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x10, 0x02, 0x2a, 0x5e, 0x0a, 0x12, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x12,
	0x11, 0x0a, 0x0d, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x44, 0x45, 0x4d, 0x5f, 0x4d,
	0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x53, 0x10, 0x04, 0x42, 0x85, 0x01, 0x42, 0x17, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x43, 0x72, 0x75, 0x64, 0x41, 0x70, 0x69, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x6a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x66, 0x6b,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x46, 0x6c, 0x69,
	0x70, 0x6b, 0x61, 0x72, 0x74, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2d, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2d, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_entity_crud_api_model_proto_rawDescOnce sync.Once
	file_entity_crud_api_model_proto_rawDescData = file_entity_crud_api_model_proto_rawDesc
)

func file_entity_crud_api_model_proto_rawDescGZIP() []byte {
	file_entity_crud_api_model_proto_rawDescOnce.Do(func() {
		file_entity_crud_api_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_entity_crud_api_model_proto_rawDescData)
	})
	return file_entity_crud_api_model_proto_rawDescData
}

var file_entity_crud_api_model_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_entity_crud_api_model_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_entity_crud_api_model_proto_goTypes = []interface{}{
	(MigrateMode)(0),                            // 0: com.flipkart.entitymanager.client.model.MigrateMode
	(FetchMode)(0),                              // 1: com.flipkart.entitymanager.client.model.FetchMode
	(EntityFieldsToRead)(0),                     // 2: com.flipkart.entitymanager.client.model.EntityFieldsToRead
	(*UpsertEntityRequest)(nil),                 // 3: com.flipkart.entitymanager.client.model.UpsertEntityRequest
	(*MigrateEntityRequest)(nil),                // 4: com.flipkart.entitymanager.client.model.MigrateEntityRequest
	(*MigrateIndexRequest)(nil),                 // 5: com.flipkart.entitymanager.client.model.MigrateIndexRequest
	(*MigrateOrderingEntityRequest)(nil),        // 6: com.flipkart.entitymanager.client.model.MigrateOrderingEntityRequest
	(*MigrateOrderingEntityResponse)(nil),       // 7: com.flipkart.entitymanager.client.model.MigrateOrderingEntityResponse
	(*UpsertEntityResponse)(nil),                // 8: com.flipkart.entitymanager.client.model.UpsertEntityResponse
	(*MigrateEntityResponse)(nil),               // 9: com.flipkart.entitymanager.client.model.MigrateEntityResponse
	(*MigrateIndexResponse)(nil),                // 10: com.flipkart.entitymanager.client.model.MigrateIndexResponse
	(*ReadEntityRequest)(nil),                   // 11: com.flipkart.entitymanager.client.model.ReadEntityRequest
	(*ReadEntityResponse)(nil),                  // 12: com.flipkart.entitymanager.client.model.ReadEntityResponse
	(*AuditEntityRequest)(nil),                  // 13: com.flipkart.entitymanager.client.model.AuditEntityRequest
	(*AuditEntityResponse)(nil),                 // 14: com.flipkart.entitymanager.client.model.AuditEntityResponse
	(*BulkReadEntityRequest)(nil),               // 15: com.flipkart.entitymanager.client.model.BulkReadEntityRequest
	(*IndexValueEntity)(nil),                    // 16: com.flipkart.entitymanager.client.model.IndexValueEntity
	(*BulkReadEntityResponse)(nil),              // 17: com.flipkart.entitymanager.client.model.BulkReadEntityResponse
	(*IndexQueryRequest)(nil),                   // 18: com.flipkart.entitymanager.client.model.IndexQueryRequest
	(*Target)(nil),                              // 19: com.flipkart.entitymanager.client.model.Target
	(*Filter)(nil),                              // 20: com.flipkart.entitymanager.client.model.Filter
	(*EqualToFilter)(nil),                       // 21: com.flipkart.entitymanager.client.model.EqualToFilter
	(*IsEmptyFilter)(nil),                       // 22: com.flipkart.entitymanager.client.model.IsEmptyFilter
	(*NotFilter)(nil),                           // 23: com.flipkart.entitymanager.client.model.NotFilter
	(*IsNotEmptyFilter)(nil),                    // 24: com.flipkart.entitymanager.client.model.IsNotEmptyFilter
	(*InFilter)(nil),                            // 25: com.flipkart.entitymanager.client.model.InFilter
	(*LessThanFilter)(nil),                      // 26: com.flipkart.entitymanager.client.model.LessThanFilter
	(*GreaterThanFilter)(nil),                   // 27: com.flipkart.entitymanager.client.model.GreaterThanFilter
	(*LessThanEqualFilter)(nil),                 // 28: com.flipkart.entitymanager.client.model.LessThanEqualFilter
	(*GreaterThanEqualFilter)(nil),              // 29: com.flipkart.entitymanager.client.model.GreaterThanEqualFilter
	(*NotEqualFilter)(nil),                      // 30: com.flipkart.entitymanager.client.model.NotEqualFilter
	(*LeftIncludeRangeFilter)(nil),              // 31: com.flipkart.entitymanager.client.model.LeftIncludeRangeFilter
	(*RightIncludeRangeFilter)(nil),             // 32: com.flipkart.entitymanager.client.model.RightIncludeRangeFilter
	(*RangeIncludeFilter)(nil),                  // 33: com.flipkart.entitymanager.client.model.RangeIncludeFilter
	(*RangeFilter)(nil),                         // 34: com.flipkart.entitymanager.client.model.RangeFilter
	(*AndFilter)(nil),                           // 35: com.flipkart.entitymanager.client.model.AndFilter
	(*OrFilter)(nil),                            // 36: com.flipkart.entitymanager.client.model.OrFilter
	(*AnyFilter)(nil),                           // 37: com.flipkart.entitymanager.client.model.AnyFilter
	(*AllFilter)(nil),                           // 38: com.flipkart.entitymanager.client.model.AllFilter
	(*EntityManagerModel.EntityIdentifier)(nil), // 39: com.flipkart.entitymanager.model.entityregistry.EntityIdentifier
	(*EntityManagerModel.TenantIdentifier)(nil), // 40: com.flipkart.entitymanager.model.tenantregistry.TenantIdentifier
	(*ResponseMeta)(nil),                        // 41: com.flipkart.entitymanager.client.model.ResponseMeta
}
var file_entity_crud_api_model_proto_depIdxs = []int32{
	39, // 0: com.flipkart.entitymanager.client.model.UpsertEntityRequest.entity_identifier:type_name -> com.flipkart.entitymanager.model.entityregistry.EntityIdentifier
	40, // 1: com.flipkart.entitymanager.client.model.UpsertEntityRequest.tenant_identifier:type_name -> com.flipkart.entitymanager.model.tenantregistry.TenantIdentifier
	39, // 2: com.flipkart.entitymanager.client.model.MigrateEntityRequest.entity_identifier:type_name -> com.flipkart.entitymanager.model.entityregistry.EntityIdentifier
	40, // 3: com.flipkart.entitymanager.client.model.MigrateEntityRequest.tenant_identifier:type_name -> com.flipkart.entitymanager.model.tenantregistry.TenantIdentifier
	0,  // 4: com.flipkart.entitymanager.client.model.MigrateEntityRequest.migration_mode:type_name -> com.flipkart.entitymanager.client.model.MigrateMode
	39, // 5: com.flipkart.entitymanager.client.model.MigrateIndexRequest.entity_identifier:type_name -> com.flipkart.entitymanager.model.entityregistry.EntityIdentifier
	40, // 6: com.flipkart.entitymanager.client.model.MigrateIndexRequest.tenant_identifier:type_name -> com.flipkart.entitymanager.model.tenantregistry.TenantIdentifier
	39, // 7: com.flipkart.entitymanager.client.model.MigrateOrderingEntityRequest.entity_identifier:type_name -> com.flipkart.entitymanager.model.entityregistry.EntityIdentifier
	40, // 8: com.flipkart.entitymanager.client.model.MigrateOrderingEntityRequest.tenant_identifier:type_name -> com.flipkart.entitymanager.model.tenantregistry.TenantIdentifier
	41, // 9: com.flipkart.entitymanager.client.model.MigrateOrderingEntityResponse.response_meta:type_name -> com.flipkart.entitymanager.client.model.ResponseMeta
	41, // 10: com.flipkart.entitymanager.client.model.UpsertEntityResponse.response_meta:type_name -> com.flipkart.entitymanager.client.model.ResponseMeta
	41, // 11: com.flipkart.entitymanager.client.model.MigrateEntityResponse.response_meta:type_name -> com.flipkart.entitymanager.client.model.ResponseMeta
	41, // 12: com.flipkart.entitymanager.client.model.MigrateIndexResponse.response_meta:type_name -> com.flipkart.entitymanager.client.model.ResponseMeta
	39, // 13: com.flipkart.entitymanager.client.model.ReadEntityRequest.entity_identifier:type_name -> com.flipkart.entitymanager.model.entityregistry.EntityIdentifier
	40, // 14: com.flipkart.entitymanager.client.model.ReadEntityRequest.tenant_identifier:type_name -> com.flipkart.entitymanager.model.tenantregistry.TenantIdentifier
	2,  // 15: com.flipkart.entitymanager.client.model.ReadEntityRequest.fields_to_read:type_name -> com.flipkart.entitymanager.client.model.EntityFieldsToRead
	41, // 16: com.flipkart.entitymanager.client.model.ReadEntityResponse.response_meta:type_name -> com.flipkart.entitymanager.client.model.ResponseMeta
	39, // 17: com.flipkart.entitymanager.client.model.AuditEntityRequest.entity_identifier:type_name -> com.flipkart.entitymanager.model.entityregistry.EntityIdentifier
	40, // 18: com.flipkart.entitymanager.client.model.AuditEntityRequest.tenant_identifier:type_name -> com.flipkart.entitymanager.model.tenantregistry.TenantIdentifier
	41, // 19: com.flipkart.entitymanager.client.model.AuditEntityResponse.response_meta:type_name -> com.flipkart.entitymanager.client.model.ResponseMeta
	39, // 20: com.flipkart.entitymanager.client.model.BulkReadEntityRequest.entity_identifier:type_name -> com.flipkart.entitymanager.model.entityregistry.EntityIdentifier
	40, // 21: com.flipkart.entitymanager.client.model.BulkReadEntityRequest.tenant_identifier:type_name -> com.flipkart.entitymanager.model.tenantregistry.TenantIdentifier
	2,  // 22: com.flipkart.entitymanager.client.model.BulkReadEntityRequest.fields_to_read:type_name -> com.flipkart.entitymanager.client.model.EntityFieldsToRead
	41, // 23: com.flipkart.entitymanager.client.model.BulkReadEntityResponse.response_meta:type_name -> com.flipkart.entitymanager.client.model.ResponseMeta
	16, // 24: com.flipkart.entitymanager.client.model.BulkReadEntityResponse.index_value_entity:type_name -> com.flipkart.entitymanager.client.model.IndexValueEntity
	39, // 25: com.flipkart.entitymanager.client.model.IndexQueryRequest.entity_identifier:type_name -> com.flipkart.entitymanager.model.entityregistry.EntityIdentifier
	40, // 26: com.flipkart.entitymanager.client.model.IndexQueryRequest.tenant_identifier:type_name -> com.flipkart.entitymanager.model.tenantregistry.TenantIdentifier
	20, // 27: com.flipkart.entitymanager.client.model.IndexQueryRequest.filter:type_name -> com.flipkart.entitymanager.client.model.Filter
	1,  // 28: com.flipkart.entitymanager.client.model.IndexQueryRequest.fetch_mode:type_name -> com.flipkart.entitymanager.client.model.FetchMode
	21, // 29: com.flipkart.entitymanager.client.model.Filter.equal_filter:type_name -> com.flipkart.entitymanager.client.model.EqualToFilter
	25, // 30: com.flipkart.entitymanager.client.model.Filter.in_filter:type_name -> com.flipkart.entitymanager.client.model.InFilter
	26, // 31: com.flipkart.entitymanager.client.model.Filter.less_than_filter:type_name -> com.flipkart.entitymanager.client.model.LessThanFilter
	27, // 32: com.flipkart.entitymanager.client.model.Filter.greater_than_filter:type_name -> com.flipkart.entitymanager.client.model.GreaterThanFilter
	28, // 33: com.flipkart.entitymanager.client.model.Filter.less_than_eq_filter:type_name -> com.flipkart.entitymanager.client.model.LessThanEqualFilter
	29, // 34: com.flipkart.entitymanager.client.model.Filter.greater_than_eq_filter:type_name -> com.flipkart.entitymanager.client.model.GreaterThanEqualFilter
	30, // 35: com.flipkart.entitymanager.client.model.Filter.not_equal_filter:type_name -> com.flipkart.entitymanager.client.model.NotEqualFilter
	31, // 36: com.flipkart.entitymanager.client.model.Filter.left_include_range_filter:type_name -> com.flipkart.entitymanager.client.model.LeftIncludeRangeFilter
	32, // 37: com.flipkart.entitymanager.client.model.Filter.right_include_range_filter:type_name -> com.flipkart.entitymanager.client.model.RightIncludeRangeFilter
	33, // 38: com.flipkart.entitymanager.client.model.Filter.range_include_filter:type_name -> com.flipkart.entitymanager.client.model.RangeIncludeFilter
	34, // 39: com.flipkart.entitymanager.client.model.Filter.range_filter:type_name -> com.flipkart.entitymanager.client.model.RangeFilter
	35, // 40: com.flipkart.entitymanager.client.model.Filter.and_filter:type_name -> com.flipkart.entitymanager.client.model.AndFilter
	37, // 41: com.flipkart.entitymanager.client.model.Filter.any_filter:type_name -> com.flipkart.entitymanager.client.model.AnyFilter
	36, // 42: com.flipkart.entitymanager.client.model.Filter.or_filter:type_name -> com.flipkart.entitymanager.client.model.OrFilter
	22, // 43: com.flipkart.entitymanager.client.model.Filter.is_empty_filter:type_name -> com.flipkart.entitymanager.client.model.IsEmptyFilter
	24, // 44: com.flipkart.entitymanager.client.model.Filter.is_not_empty_filter:type_name -> com.flipkart.entitymanager.client.model.IsNotEmptyFilter
	23, // 45: com.flipkart.entitymanager.client.model.Filter.not_filter:type_name -> com.flipkart.entitymanager.client.model.NotFilter
	38, // 46: com.flipkart.entitymanager.client.model.Filter.all_filter:type_name -> com.flipkart.entitymanager.client.model.AllFilter
	19, // 47: com.flipkart.entitymanager.client.model.EqualToFilter.target:type_name -> com.flipkart.entitymanager.client.model.Target
	20, // 48: com.flipkart.entitymanager.client.model.NotFilter.filter:type_name -> com.flipkart.entitymanager.client.model.Filter
	19, // 49: com.flipkart.entitymanager.client.model.InFilter.target:type_name -> com.flipkart.entitymanager.client.model.Target
	19, // 50: com.flipkart.entitymanager.client.model.LessThanFilter.target:type_name -> com.flipkart.entitymanager.client.model.Target
	19, // 51: com.flipkart.entitymanager.client.model.GreaterThanFilter.target:type_name -> com.flipkart.entitymanager.client.model.Target
	19, // 52: com.flipkart.entitymanager.client.model.LessThanEqualFilter.target:type_name -> com.flipkart.entitymanager.client.model.Target
	19, // 53: com.flipkart.entitymanager.client.model.GreaterThanEqualFilter.target:type_name -> com.flipkart.entitymanager.client.model.Target
	19, // 54: com.flipkart.entitymanager.client.model.NotEqualFilter.target:type_name -> com.flipkart.entitymanager.client.model.Target
	19, // 55: com.flipkart.entitymanager.client.model.LeftIncludeRangeFilter.target:type_name -> com.flipkart.entitymanager.client.model.Target
	19, // 56: com.flipkart.entitymanager.client.model.RightIncludeRangeFilter.target:type_name -> com.flipkart.entitymanager.client.model.Target
	19, // 57: com.flipkart.entitymanager.client.model.RangeIncludeFilter.target:type_name -> com.flipkart.entitymanager.client.model.Target
	19, // 58: com.flipkart.entitymanager.client.model.RangeFilter.target:type_name -> com.flipkart.entitymanager.client.model.Target
	20, // 59: com.flipkart.entitymanager.client.model.AndFilter.filters:type_name -> com.flipkart.entitymanager.client.model.Filter
	20, // 60: com.flipkart.entitymanager.client.model.OrFilter.filters:type_name -> com.flipkart.entitymanager.client.model.Filter
	19, // 61: com.flipkart.entitymanager.client.model.AnyFilter.target:type_name -> com.flipkart.entitymanager.client.model.Target
	19, // 62: com.flipkart.entitymanager.client.model.AllFilter.target:type_name -> com.flipkart.entitymanager.client.model.Target
	63, // [63:63] is the sub-list for method output_type
	63, // [63:63] is the sub-list for method input_type
	63, // [63:63] is the sub-list for extension type_name
	63, // [63:63] is the sub-list for extension extendee
	0,  // [0:63] is the sub-list for field type_name
}

func init() { file_entity_crud_api_model_proto_init() }
func file_entity_crud_api_model_proto_init() {
	if File_entity_crud_api_model_proto != nil {
		return
	}
	file_response_meta_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_entity_crud_api_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertEntityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrateEntityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrateIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrateOrderingEntityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrateOrderingEntityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertEntityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrateEntityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrateIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadEntityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadEntityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditEntityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditEntityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkReadEntityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexValueEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkReadEntityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EqualToFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsEmptyFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsNotEmptyFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessThanFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GreaterThanFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessThanEqualFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GreaterThanEqualFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotEqualFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeftIncludeRangeFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RightIncludeRangeFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RangeIncludeFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RangeFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnyFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_crud_api_model_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_entity_crud_api_model_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*Target_TargetString)(nil),
		(*Target_TargetLong)(nil),
		(*Target_TargetDouble)(nil),
		(*Target_TargetInt)(nil),
		(*Target_TargetFloat)(nil),
		(*Target_TargetBool)(nil),
	}
	file_entity_crud_api_model_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*Filter_EqualFilter)(nil),
		(*Filter_InFilter)(nil),
		(*Filter_LessThanFilter)(nil),
		(*Filter_GreaterThanFilter)(nil),
		(*Filter_LessThanEqFilter)(nil),
		(*Filter_GreaterThanEqFilter)(nil),
		(*Filter_NotEqualFilter)(nil),
		(*Filter_LeftIncludeRangeFilter)(nil),
		(*Filter_RightIncludeRangeFilter)(nil),
		(*Filter_RangeIncludeFilter)(nil),
		(*Filter_RangeFilter)(nil),
		(*Filter_AndFilter)(nil),
		(*Filter_AnyFilter)(nil),
		(*Filter_OrFilter)(nil),
		(*Filter_IsEmptyFilter)(nil),
		(*Filter_IsNotEmptyFilter)(nil),
		(*Filter_NotFilter)(nil),
		(*Filter_AllFilter)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_entity_crud_api_model_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_entity_crud_api_model_proto_goTypes,
		DependencyIndexes: file_entity_crud_api_model_proto_depIdxs,
		EnumInfos:         file_entity_crud_api_model_proto_enumTypes,
		MessageInfos:      file_entity_crud_api_model_proto_msgTypes,
	}.Build()
	File_entity_crud_api_model_proto = out.File
	file_entity_crud_api_model_proto_rawDesc = nil
	file_entity_crud_api_model_proto_goTypes = nil
	file_entity_crud_api_model_proto_depIdxs = nil
}
